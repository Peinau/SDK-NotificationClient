{"version":3,"sources":["../../src/client/NotificationClient.js"],"names":["NotificationClient","endpoint","authKey","triggerUrl","eventName","payload","Promise","resolve","reject","url","method","json","body","event","error","response","mailOptions"],"mappings":";;;;;;;;AAAA;;;;;;;;IAEMA,kB;;AAEF;;;;;AAKA,gCAAYC,QAAZ,EAAsBC,OAAtB,EAA+B;AAAA;;AAC3B,aAAKD,QAAL,GAAgBA,QAAhB;AACA,aAAKC,OAAL,GAAeA,OAAf;AACH;;AAED;;;;;;;;;;;uCAOeC,U,EAAYC,S,EAAWC,O,EAAS;AAAA;;AAC3C,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAIC,MAAM,MAAKR,QAAL,GAAgB,WAA1B;AACA,uCAAQ;AACAQ,yBAAKA,GADL;AAEAC,4BAAQ,MAFR;AAGAC,0BAAM,IAHN;AAIAC,0BAAM;AACFH,6BAAKN,UADH;AAEFU,+BAAOT,SAFL;AAGFC,iCAASA;AAHP;AAJN,iBAAR,EAUI,UAAUS,KAAV,EAAiBC,QAAjB,EAA2BH,IAA3B,EAAiC;AAC7B,wBAAIE,KAAJ,EAAW;AACP,+BAAON,OAAOM,KAAP,CAAP;AACH;AACDP,4BAAQK,IAAR;AACH,iBAfL;AAgBH,aAlBM,CAAP;AAmBH;;;oCAEWI,W,EAAY,CAEvB;;;;;;kBAGUhB,kB","file":"NotificationClient.js","sourcesContent":["import request from 'request';\n\nclass NotificationClient {\n\n    /**\n     * @param {string}  endpoint - Endpoint to connect\n     * @param {string} authKey - Authorization Key given in the notification API\n     * @return {NotificationClient} Notification Client\n     */\n    constructor(endpoint, authKey) {\n        this.endpoint = endpoint;\n        this.authKey = authKey;\n    }\n\n    /**\n     * Send a Web Hook\n     * @param {string}  triggerUrl - Trigger URL to call\n     * @param {string} eventName - Event name for hook is called\n     * @param {string} payload - Payload Data to send in the POST request\n     * @return {Promise} Promise returned when notification server enqueue the request\n     */\n    triggerWebHook(triggerUrl, eventName, payload) {\n        return new Promise((resolve, reject) => {\n            var url = this.endpoint + \"/webhooks\"\n            request({\n                    url: url,\n                    method: \"POST\",\n                    json: true,\n                    body: {\n                        url: triggerUrl,\n                        event: eventName,\n                        payload: payload\n                    }\n                },\n                function (error, response, body) {\n                    if (error) {\n                        return reject(error);\n                    }\n                    resolve(body);\n                });\n        });\n    }\n\n    triggerMail(mailOptions){\n        \n    }\n}\n\nexport default NotificationClient;"]}